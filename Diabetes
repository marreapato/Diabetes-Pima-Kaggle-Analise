# modelo ml
install.packages("naniar")
library(naniar)
library(tidyverse)
str(dados)
# Pacote 'caret'
#install.packages("caret")
#library(caret)

dados<-na.exclude(dados)
table(is.na(dados))
#problema dos NA

# Dividindo em teste e treinamento
indice = createDataPartition(y = dados[['Outcome']], p = 0.75, list = FALSE)
treino = dados[ indice, ]
teste  = dados[-indice, ]
# Controle do Treinament
controle <- trainControl(method = "repeatedcv", number = 10, repeats = 3) 

install.packages("e1071")
library(e1071)
table(is.na.data.frame(dados))#n tem na




# KNN

knn = train(factor(Outcome) ~BloodPressure, data = treino, method = 'knn',
            trControl = controle, tuneLength = 10 )
knn

predicao = predict(knn, newdata = teste)
cm = confusionMatrix(predicao, factor(teste[['Outcome']]) )
cm

# LDA

lda = train(factor(vencedor) ~  blue_vitoria_ko+red_vitoria_ko, data = treino, method = 'lda',
            trControl = controle, tuneLength = 10 )
lda

predicao = predict(lda, newdata = teste)
cm = confusionMatrix(predicao, factor(teste[['vencedor']]) )
cm



# Ajuste do modelo Arvore de Decisao
modelLookup(model = 'rpart')

modelo <- train(factor(Outcome) ~., 
                data = treino, method = 'rpart',
                trControl = controle, tuneLength = 10 )
modelo$finalModel

predicao = predict(modelo, newdata = teste)
cm = confusionMatrix(predicao, factor(teste[['Outcome']]) )
cm

install.packages('rattle')
library(rattle)
fancyRpartPlot(modelo$finalModel)


dados<-read.csv("diabetes.csv")








